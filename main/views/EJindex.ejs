<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>게시판</title>
    <link rel="stylesheet" href="/css/baseStyle.css">
    <style>
        body {
            width: 100vw;
            height: 100vh;
            background: #444;
        }

        /* modal style */
        #modalLogin-con {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, .6);
            backdrop-filter: blur(10px);
            z-index: 1;
        }

        /* form style */
        #modalLogin-con form {
            width: 250px;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgb(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.15);
            padding: 20px 20px 0px 20px;
            max-width: 300px;
        }

        #modalLogin-con form label {
            font-size: 0.8em;
        }

        #modalLogin-con form input {
            width: 100%;
            border: 0;
            line-height: 18px;
            border-bottom: 2px solid #d3d3d3;
            margin-bottom: 20px;
            box-sizing: border-box; /* input의 border가 튀어나오는걸 숨겨줌 */
        }

        #modalLogin-con input [ type="text" ],
        #modalLogin-con input [ type="password" ] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        #modalLogin-con input:focus {
            background-color: #d3d3d3;
            outline: none;
            border-radius: 2px;
        }

        #modalLogin-con button {
            width: 50%;
            /*display: flex;*/
            padding: 10px;
            border: none;
            cursor: pointer;
        }

        .login-btn {
            display: flex;
            color: #fff;
            background-color: #838383;
            transition-property: all;
            transition-duration: .5s;
        }

        .closeModalBtn {
            background: none;
            color: #d3d3d3;
            font-weight: bold;
            transition-property: all;
            transition-duration: .5s;
        }

        .login-btn:hover {
            background-color: #FF7F00;
            color: white;
        }

        /* table */
        #recipe-container {
            width: 80%;
            margin: 40px auto;
            background: #fff;
            border-radius: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        #recipe-container > h2 { /*padding-bottom: 2em;*/
        }

        th, td {
            border-bottom: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
        }

        th {
            border-top: 1.5px solid #2E2E2E;
            background-color: #f2f2f2;
            cursor: pointer; /* 정렬을 위해 커서 타입 변경 */
        }

        .post-link {
            text-decoration: none; /* 기본 링크 스타일 무시 */
            color: black;
        }

        .post-link:hover {
            text-decoration: underline;
        }

        .button-container {
            display: flex;
            justify-content: flex-end;
        }

        .paging-container {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

        .paging-container a {
            margin: 0 5px;
        }

        /* 검색 조건을 가운데 정렬 */
        #searchContainer {
            text-align: center;
            margin-top: 20px;
        }

        #searchContainer label,
        #searchContainer select,
        #searchContainer input[type="text"],
        #searchContainer button {
            margin-right: 10px;
        }

        #recipe {
            width: 22%;
            height: 22%;

        }

        /* 버튼 스타일 */
        .button {
            text-align: center;
            color: #dddddd;
            background: #FF7F00;
            padding: 0.8em;
            border-radius: 7px;
            line-height: 1em;
            font-size: 0.8em;
        }
    </style>
</head>
<body>
<!-- 모달창 -->
<div id="modalLogin-con">
    <form id="loginForm" action="http://localhost:3000/login" method="POST">
        <h3>LOGIN</h3>
        <label for="username">아이디</label>
        <input type="text" id="username" name="username" required>
        <label for="password">비밀번호</label>
        <input type="password" id="password" name="password" required>
        <button type="submit" class="login-btn">로그인</button>
        <button type="button" class="closeModalBtn">✖</button>
    </form>
</div>
<header>
    <a href="/main"><h1 id="title">TITLE</h1></a>
    <div style="position: absolute; top: 10px; right: 10px;">
        <% if (userRealName) { %>
            <p><%= userRealName %>님 환영합니다. &nbsp;&nbsp; <a href="/logout" class="button">로그아웃</a></p>
            <!--        <p><%= userRealName %>님 환영합니다. &nbsp;&nbsp; <a href="/logout" class="button">로그아웃</a></p>-->
        <% } else { %>
            <a href="#" id="openModalBtn" class="button" onclick="openLoginModal()">로그인</a>
        <% } %>
    </div>
</header>
<!-- nav? -->

<!-- 게시글 목록 표시 -->
<div id="recipe-container">
    <h2>Best Recipe</h2>
    <!-- 모달 자리 -->
    <table>
        <thead>
        <tr>
            <th>제목</th>
            <th>작성자</th>
            <th>작성일</th>
            <!--
            * onmouseover="this.style.textDecoration = 'underline'":
             - 사용자가 마우스를 해당 열 제목 위에 올렸을 때 호출되는 이벤트.
             - 이벤트가 발생하면 해당 열 제목의 텍스트에 밑줄이 생기도록 스타일 변경.
             * onmouseout="this.style.textDecoration = 'none'
              - 사용자가 마우수를 해당 열 제목에서 벗어나 있는 상태에 호출 되는 이벤트
              - 해당 상태에는 밑줄을 제거하도록 스타일 변경
                  -->

            <th onclick="toggleSort()" onmouseover="this.style.textDecoration = 'underline';"
                onmouseout="this.style.textDecoration = 'none';">조회수 ▼
            </th>
        </tr>
        </thead>
        <tbody>
        <% for (let i = 0; i < recipes.length; i++) { %>
            <tr>
                <td><a href="/detailPost/<%= recipes[i][0] %>" class="post-link"><%= recipes[i][1] %>
                        [<%= recipes[i][6] %>]</a></td>
                <td><%= recipes[i][2] %></td>
                <td><%= recipes[i][3] %></td>
                <td><%= recipes[i][4] %></td>
            </tr>
        <% } %>
        </tbody>
    </table>

    <!-- 글쓰기 버튼 -->
    <div class="button-container">
        <% if (userRealName) { %>
            <a href="/create" class="button">글쓰기</a>
        <% } %>
    </div>
    <!-- 페이징 -->
    <div class="paging-container">
        <% if (currentPage > 1) { %>
            <a href="/boardMain/?page=<%= currentPage - 1 %>">이전</a>
        <% } %>

        <% for (let i = startPage; i <= endPage; i++) { %>
            <% if (i === currentPage) { %>
                <span class="current-page"><%= i %></span>
            <% } else { %>
                <a href="/boardMain/?page=<%= i %>"><%= i %></a>
            <% } %>
        <% } %>

        <% if ((totalPages - currentPage + 1) > maxPageNumber) { %>
            <a href="/boardMain/?page=<%= currentPage + 1 %>">다음</a>
        <% } %>
    </div>
    <!-- 검색 조건 -->
    <!-- 검색 조건 및 입력 창 -->
    <div id="searchContainer">
        <form action="/boardMain" method="GET">
            <label for="searchType">검색 조건:</label>
            <select id="searchType" name="searchType">
                <option value="title" selected>제목</option>
                <option value="content">게시글 내용</option>
                <option value="author">글 작성자</option>
            </select>
            <input type="text" id="searchInput" name="searchInput">
            <button type="submit">검색</button>
        </form>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    <!-- 로그인창 온/오프 -->
    const loginModal = document.getElementById('modalLogin-con');
    const openBtn = document.getElementById('openModalBtn');
    const closeBtn = document.getElementById('closeModalBtn');

    function toggleModal() {
        if (loginModal.style.display === 'block') {
            loginModal.style.display = 'none';
        } else {
            loginModal.style.display = 'block';
        }
    }

    openBtn.addEventListener('click', toggleModal);
    closeBtn.addEventListener('click', toggleModal);
</script>
</body>
</html>